name: run-all-tests-e2e

on:
  workflow_run:
    workflows: [Run-all-tests-unit-CI]
    types:
      - completed

jobs:
  run-all-tests-e2e:
    name: Run all tests e2e
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: install nodejs(version lts)
        uses: actions/setup-node@v4
        with:
          node-version: 22.11.0
          cache: 'npm'

      - name: install dependency
        run: npm ci

      - name: Define environments
        run: |
          echo "POSTGRESQL_DATABASE=$POSTGRESQL_DATABASE" >> $GITHUB_ENV
          echo "POSTGRESQL_PASSWORD=$POSTGRESQL_PASSWORD" >> $GITHUB_ENV
          echo "POSTGRESQL_USERNAME=$POSTGRESQL_USERNAME" >> $GITHUB_ENV
          echo "POSTGRESQL_PORT_NUMBER=$POSTGRESQL_PORT_NUMBER" >> $GITHUB_ENV
          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
          echo "CLOUDFLARE_ACCOUNT_ID=$CLOUDFLARE_ACCOUNT_ID" >> $GITHUB_ENV
          echo "AWS_BUCKET_NAME=$AWS_BUCKET_NAME" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "JWT_PUBLIC_KEY=$JWT_PUBLIC_KEY" >> $GITHUB_ENV
          echo "JWT_PRIVATE_KEY=$JWT_PRIVATE_KEY" >> $GITHUB_ENV
        env:
          POSTGRESQL_DATABASE: ${{ secrets.POSTGRESQL_DATABASE }}
          POSTGRESQL_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
          POSTGRESQL_USERNAME: ${{ secrets.POSTGRESQL_USERNAME }}
          POSTGRESQL_PORT_NUMBER: ${{ secrets.POSTGRESQL_PORT_NUMBER }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}

      - name: install docker compose
        uses: docker/setup-compose-action@v1

      - name: Run services docker compose
        run: docker compose -f src/infra/docker-compose.yaml up -d

      - name: run tests e2e
        run: npm run test:e2e
